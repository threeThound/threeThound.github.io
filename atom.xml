<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>三千Blog</title>
  <subtitle>技术交流 随感</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-12T01:35:18.038Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>threeThound</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql 面试题</title>
    <link href="http://yoursite.com/2018/04/12/mysql%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2018/04/12/mysql面试题/</id>
    <published>2018-04-12T12:48:03.000Z</published>
    <updated>2018-04-12T01:35:18.038Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库面试题相关"><a href="#数据库面试题相关" class="headerlink" title="数据库面试题相关"></a>数据库面试题相关</h1><h2 id="数据处理岗位面试题"><a href="#数据处理岗位面试题" class="headerlink" title="数据处理岗位面试题"></a>数据处理岗位面试题</h2><p>1.什么是主键，什么是外键？<br>定义主键和外键，是为了维护关系型数据库的完整性，总结如下：</p>
<ul>
<li>主键是能确定一条记录的唯一标识，比如一条记录包含身份证号，姓名，年龄。</li>
</ul>
<p><strong>说明</strong><br><em>身份证号是唯一能确定你这个人的，其他都可能重复，所以身份证号是主键。</em></p>
<ul>
<li>外键用于另一张表的关联。是能确定另一张表记录的字段，用于保持数据的一致性。</li>
</ul>
<p><strong>示例</strong><br><em>比如，A表中的一个字段，是B表的主键，那他就可以是A表的外键。</em></p>
<p>2.用一条sql语句查询出方剂中每种药物剂量都大于80的方剂</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>HJID</td>
<td>药物名</td>
<td>剂量</td>
</tr>
<tr>
<td>1</td>
<td>桂枝</td>
<td>81</td>
</tr>
<tr>
<td>1</td>
<td>甘草</td>
<td>75</td>
</tr>
<tr>
<td>2</td>
<td>厚朴</td>
<td>76</td>
</tr>
<tr>
<td>2</td>
<td>贝母</td>
<td>90</td>
</tr>
<tr>
<td>2</td>
<td>甘草</td>
<td>81</td>
</tr>
<tr>
<td>3</td>
<td>桂心</td>
<td>100</td>
</tr>
<tr>
<td>3</td>
<td>杏仁</td>
<td>90</td>
</tr>
</tbody>
</table>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> HJID,<span class="keyword">sum</span>(剂量 &lt; <span class="number">80</span>) <span class="keyword">as</span> cnt <span class="keyword">from</span> 表名 <span class="keyword">group</span> <span class="keyword">by</span> HJID <span class="keyword">having</span> cnt &lt;= <span class="number">0</span>;</div></pre></td></tr></table></figure>
<p>3.有两个表A和B,均有key和value两个字段，如果B的key在A中也有，就把B的value换为A中对应的value值。这道题中的SQL语句怎么写？</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">UPDATE</span> A <span class="keyword">join</span> B <span class="keyword">on</span> A.name=B.name <span class="keyword">set</span> A.<span class="string">`value`</span>=B.<span class="string">`value`</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据库面试题相关&quot;&gt;&lt;a href=&quot;#数据库面试题相关&quot; class=&quot;headerlink&quot; title=&quot;数据库面试题相关&quot;&gt;&lt;/a&gt;数据库面试题相关&lt;/h1&gt;&lt;h2 id=&quot;数据处理岗位面试题&quot;&gt;&lt;a href=&quot;#数据处理岗位面试题&quot; class=&quot;he
    
    </summary>
    
    
      <category term="python 面试" scheme="http://yoursite.com/tags/python-%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>ssh 免密登陆</title>
    <link href="http://yoursite.com/2018/03/24/ssh-%E5%85%8D%E5%AF%86%E7%99%BB%E9%99%86/"/>
    <id>http://yoursite.com/2018/03/24/ssh-免密登陆/</id>
    <published>2018-03-24T12:48:03.000Z</published>
    <updated>2018-04-29T04:07:55.590Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是主机间免密登陆"><a href="#什么是主机间免密登陆" class="headerlink" title="什么是主机间免密登陆"></a>什么是主机间免密登陆</h3><pre><code>就是我和另外一台主机做任何事情，不需要输入密码认证，非常方便。
</code></pre><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><ol>
<li><p>客户机生成ssh私钥和公钥</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ssk-keygen -t rsa # 生成id_rsa及id_rsa.pub两个文件</div><div class="line">#以root用户运行时，默认存储位置 /root/.ssh; 以普通用户运行时，默认存储位置 ~/.ssh</div><div class="line"># 在开启免密登录时，需要对应的添加公钥文件：root--&gt;root  普通-&gt;普通</div></pre></td></tr></table></figure>
</li>
<li><p>服务器配置文件 <code>/etc/ssh/sshd_config</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Port 22</div><div class="line">Protocol 2</div><div class="line">HostKey /etc/ssh/ssh_host_rsa_key</div><div class="line">HostKey /etc/ssh/ssh_host_dsa_key</div><div class="line">KeyRegenerationInterval 3600</div><div class="line">ServerKeyBits 768</div><div class="line">SyslogFacility AUTH</div><div class="line">LogLevel INFO</div><div class="line">LoginGraceTime 600</div><div class="line">PermitRootLogin yes    # 允许以root用户登录</div><div class="line">PubkeyAuthentication yes  # 允许公钥认证</div><div class="line">AuthorizedKeysFile      .ssh/authorized_keys  # 公钥认证文件位置</div><div class="line">RhostsAuthentication no</div><div class="line">IgnoreRhosts yes</div><div class="line">HostbasedAuthentication no</div><div class="line">PasswordAuthentication no  # 开启免密</div><div class="line">PermitEmptyPasswords no</div><div class="line">ChallengeResponseAuthentication no</div><div class="line">MaxStartups 20</div><div class="line">Subsystem       sftp /usr/libexec/openssh/sftp-server</div></pre></td></tr></table></figure>
</li>
<li><p>在 <strong>服务器端</strong>添加公钥文件，目录与客户机对应，名称改为authorized_keys。即:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#root用户</div><div class="line">客户机的/root/.ssh/id_rsa.pub 里面的内容 复制粘贴到服务器端 /root/.ssh/authorized_keys</div><div class="line"></div><div class="line"># 普通用户</div><div class="line">客户机的~/.ssh/id_rsa.pub 里面的内容 复制粘贴到服务器端 ~/.ssh/authorized_keys</div></pre></td></tr></table></figure>
</li>
</ol>
<p>4.退出服务器，重新登录<br><img src="/2018/03/24/ssh-免密登陆/ssh-nopassword.png" alt="ssh-免密登陆/ssh-nopassword.png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;什么是主机间免密登陆&quot;&gt;&lt;a href=&quot;#什么是主机间免密登陆&quot; class=&quot;headerlink&quot; title=&quot;什么是主机间免密登陆&quot;&gt;&lt;/a&gt;什么是主机间免密登陆&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;就是我和另外一台主机做任何事情，不需要输入密码认证，非常方便
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Redis 数据类型及操作</title>
    <link href="http://yoursite.com/2017/05/16/Redis-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%8F%8A%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/05/16/Redis-数据类型及简单操作/</id>
    <published>2017-05-16T02:08:14.000Z</published>
    <updated>2018-04-12T01:45:42.616Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis-基本数据类型"><a href="#Redis-基本数据类型" class="headerlink" title="Redis 基本数据类型"></a>Redis 基本数据类型</h2><blockquote>
<ul>
<li>Resis 是 <em>key-Value</em> 的数据结构，每条数据都是一个 <em>键值对</em></li>
<li>不管是 <em>键名</em> 还是<em>值</em> 都是字符串，即Redis存储的一切数据，基于的都是字符串。</li>
</ul>
</blockquote>
<p>Redis 支持5种数据类型：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>数据类型</td>
<td>含义</td>
</tr>
<tr>
<td>string</td>
<td>字符串</td>
</tr>
<tr>
<td>hash</td>
<td>哈希</td>
</tr>
<tr>
<td>list</td>
<td>列表</td>
</tr>
<tr>
<td>set</td>
<td>集合</td>
</tr>
<tr>
<td>zset</td>
<td>有序集合</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h2 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String 字符串"></a>String 字符串</h2><p>string 是redis最基本的类型，一个key对应一个value。<br>string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象。<br>string类型是Redis的最基本的数据类型，一个键最大能存储512MB。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; set name &quot;itcast&quot;</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get name</div><div class="line">&quot;itcast&quot;</div></pre></td></tr></table></figure></p>
<p>在上面的例子中，<code>set</code>和 <code>get</code> 是Redis string命令， <code>name</code> 和 <code>itcast</code>是存储在Redis的键和字符串值。</p>
<h2 id="Hash-哈希"><a href="#Hash-哈希" class="headerlink" title="Hash 哈希"></a>Hash 哈希</h2><p>Redis hash 是一个键值对集合。<br>Redis hash 是一个string类型的 <code>fileld</code> 和 <code>value</code>的映射表，hash特别适用于存储对象。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; hset myhash age &quot;18&quot;</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; hget myhash age</div><div class="line">&quot;18&quot;</div><div class="line">127.0.0.1:6379&gt; hmset my_hash username &quot;tom&quot; age 18 gender &quot;男&quot;</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; hgetall my_hash</div><div class="line">username</div><div class="line">tom</div><div class="line">age</div><div class="line">18</div><div class="line">gender</div><div class="line">男</div></pre></td></tr></table></figure></p>
<p>在上面的例子中，哈希数据表用于存储包含用户基本信息的用户对象。这里 hset, hget, hgetall 是Redis HASHES命令，同时 <code>myhash</code> 、<code>my_hash</code>都是键。</p>
<h2 id="List-列表"><a href="#List-列表" class="headerlink" title="List 列表"></a>List 列表</h2><p>Redis 列表是简单的字符串列表， 按照插入顺序排序,可以选择添加一个元素的头部（左边）或者尾部（右边）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 先插入的数据在尾部（右边）</div><div class="line">lpush key value [value ...]</div><div class="line"></div><div class="line"># 先插入的数据在头部（列表左边）</div><div class="line">rpush key value [value ...]</div><div class="line"></div><div class="line"># 查看列表数据，并指定区间</div><div class="line">lrange key start stop</div></pre></td></tr></table></figure>
<blockquote>
<p>mylist1 of lpush (从头部插入数据）</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; lpush mylist1 &quot;mysql&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; lpush mylist1 &quot;redis&quot;</div><div class="line">2</div><div class="line">127.0.0.1:6379&gt; lpush mylist1 &quot;Mongodb&quot;</div><div class="line">3</div><div class="line">127.0.0.1:6379&gt; lrange mylist1 0 -1</div><div class="line">Mongodb</div><div class="line">redis</div><div class="line">mysql</div></pre></td></tr></table></figure>
<blockquote>
<p>mylist2 of rpush (从尾部插入数据)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; rpush mylist2 &quot;mysql&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; rpush mylist2 &quot;moongodb&quot;</div><div class="line">2</div><div class="line">127.0.0.1:6379&gt; rpush mylist2 &quot;redis&quot;</div><div class="line">3</div><div class="line">127.0.0.1:6379&gt; lrange mylist2 0 -1</div><div class="line">mysql</div><div class="line">moongodb</div><div class="line">redis</div></pre></td></tr></table></figure>
<p>列表最多可存储2^32-1个元素（4294967295,每个列表可存储40多亿）</p>
<h2 id="Set-集合"><a href="#Set-集合" class="headerlink" title="Set 集合"></a>Set 集合</h2><p>Redis Set是 <code>string</code>类型的无序集合。<br>集合是通过哈希表实现的，所以添加、删除、查找的复杂度都是O(1)。<br>在Redis可以添加，删除，和测试成员存在的事件复杂度是O(1)。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; sadd myset1 &quot;mysql&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; sadd myset1 &quot;redis&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; sadd myset1 &quot;mogodb&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; sadd myset1 &quot;redis&quot;</div><div class="line">0</div><div class="line">127.0.0.1:6379&gt; smembers myset1</div><div class="line">mogodb</div><div class="line">mysql</div><div class="line">redis</div></pre></td></tr></table></figure>
<p>注：在上面的例子中redis被添加两次，但由于它只是集合，具有唯一特性。集合中最大的成员数为2^32-1(4294967295,每个集合可存储40多亿个成员)。</p>
<h2 id="zset-sorted-set-有序集合"><a href="#zset-sorted-set-有序集合" class="headerlink" title="zset(sorted set: 有序集合)"></a>zset(sorted set: 有序集合)</h2><p>Redis zset 和set一样也是string类型元素的集合，且不允许重复的成员。<br>不同的是每个元素都会关联一个double类型的分数（权重)。redis正是通过分数为集合中的成员（权重）进行从小到大排序的。<br>zset的成员是唯一的，但分数（score）却可以重复。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; zadd mysortset 0 &quot;mysql&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; zadd mysortset 0 &quot;redis&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; zadd mysortset 1 &quot;mysql&quot;</div><div class="line">0</div><div class="line">127.0.0.1:6379&gt; zadd mysortset 2 &quot;oracle&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; zadd mysortset 3 &quot;mongdb&quot;</div><div class="line">1</div><div class="line">127.0.0.1:6379&gt; zrangebyscore mysortset 0 2</div><div class="line">redis</div><div class="line">mysql</div><div class="line">oracle</div></pre></td></tr></table></figure></p>
<h2 id="键操作"><a href="#键操作" class="headerlink" title="键操作"></a>键操作</h2><h4 id="keys-查看所有键"><a href="#keys-查看所有键" class="headerlink" title="keys * : 查看所有键"></a>keys * : 查看所有键</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; keys *</div><div class="line">myset1</div><div class="line">mysortset</div></pre></td></tr></table></figure>
<h4 id="使用通配符-：-查看名称中包含有m的键"><a href="#使用通配符-：-查看名称中包含有m的键" class="headerlink" title="使用通配符 *： 查看名称中包含有m的键"></a>使用通配符 *： 查看名称中包含有m的键</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; keys &quot;*m*&quot;</div><div class="line">myset1</div><div class="line">mysortset</div></pre></td></tr></table></figure>
<h4 id="exists-查看验证键是否存在"><a href="#exists-查看验证键是否存在" class="headerlink" title="exists 查看验证键是否存在"></a>exists 查看验证键是否存在</h4><ul>
<li>键存在：(integer)1</li>
<li>键不存在： (integer)0<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; exists name</div><div class="line">0</div><div class="line">127.0.0.1:6379&gt; exists myset1</div><div class="line">1</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="type-查看键对应的值的数据类型"><a href="#type-查看键对应的值的数据类型" class="headerlink" title="type 查看键对应的值的数据类型"></a>type 查看键对应的值的数据类型</h4><ul>
<li>键存在： 数据类型名</li>
<li>键不存在： none<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; type myset1</div><div class="line">set</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="del-删除键值：-删除这个key及对应的value"><a href="#del-删除键值：-删除这个key及对应的value" class="headerlink" title="del 删除键值： 删除这个key及对应的value"></a>del 删除键值： 删除这个key及对应的value</h4><ul>
<li>键存在：(integer)1</li>
<li>键不存在： (integer)0<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; del name</div><div class="line">0</div><div class="line">127.0.0.1:6379&gt; del myset1</div><div class="line">1</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Redis-基本数据类型&quot;&gt;&lt;a href=&quot;#Redis-基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;Redis 基本数据类型&quot;&gt;&lt;/a&gt;Redis 基本数据类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Resis 是 &lt;em&gt;key-Value&lt;/em&gt; 的数据结构，每条数据都是一个 &lt;em&gt;键值对&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;不管是 &lt;em&gt;键名&lt;/em&gt; 还是&lt;em&gt;值&lt;/em&gt; 都是字符串，即Redis存储的一切数据，基于的都是字符串。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Redis 支持5种数据类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;含义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hash&lt;/td&gt;
&lt;td&gt;哈希&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;td&gt;列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set&lt;/td&gt;
&lt;td&gt;集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zset&lt;/td&gt;
&lt;td&gt;有序集合&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7.0 关闭默认防火墙启用iptables防火墙</title>
    <link href="http://yoursite.com/2016/05/14/CentOS-%E4%B8%8B%E9%98%B2%E7%81%AB%E5%A2%99%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2016/05/14/CentOS-下防火墙相关配置/</id>
    <published>2016-05-14T13:27:27.000Z</published>
    <updated>2017-05-14T14:14:23.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本文介绍在CentOS 7.0中关闭默认防火墙，开启iptables防火墙步骤</p>
<h3 id="操作系统环境："><a href="#操作系统环境：" class="headerlink" title="操作系统环境："></a>操作系统环境：</h3><p>CentOS Linux release 7.0.1611(Core) 64位<br>CentOS 7.0默认使用的是firewall作为防火墙，这里改为iptables防火墙步骤。</p>
<a id="more"></a>
<p>1.<strong>关闭默认防火墙</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">systemctl stop firewalld.service #停止firewall</div><div class="line">systemctl disable firewalld.service #禁止firewall开机启动</div><div class="line">firewall-cmd --state #查看默认防火墙状态（关闭后显示notrunning，开启后显示running）</div></pre></td></tr></table></figure></p>
<p>2.<strong>iptables防火墙</strong>（这里iptables已经安装，下面进行配置）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">sudo vi /etc/sysconfig/iptables #用vi编辑iptables防火墙配置文件</div><div class="line"></div><div class="line"></div><div class="line"># sample configuration for iptables service</div><div class="line"># you can edit this manually or use system-config-firewall</div><div class="line"># please do not ask us to add additional ports/services to this default configuration</div><div class="line">*filter</div><div class="line">:INPUT ACCEPT [0:0]</div><div class="line">:FORWARD ACCEPT [0:0]</div><div class="line">:OUTPUT ACCEPT [0:0]</div><div class="line">-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</div><div class="line">-A INPUT -p icmp -j ACCEPT</div><div class="line">-A INPUT -i lo -j ACCEPT</div><div class="line"># 添加开放的端口号  </div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT</div><div class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT</div><div class="line"># mysql图形界面navicat需要的端口，在windows上连接Linux下的mysql时需要</div><div class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT</div><div class="line">-A INPUT -m state --state NEW -m udp -p udp --dport 3306 -j ACCEPT</div><div class="line">-A INPUT -j REJECT --reject-with icmp-host-prohibited</div><div class="line">-A FORWARD -j REJECT --reject-with icmp-host-prohibited</div><div class="line">COMMIT</div></pre></td></tr></table></figure></p>
<p>备注：这里使用22和21端口为例。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl restart iptables.service #最后重启防火墙使配置生效</div><div class="line">systemctl enable iptables.service #设置防火墙开机启动</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;本文介绍在CentOS 7.0中关闭默认防火墙，开启iptables防火墙步骤&lt;/p&gt;
&lt;h3 id=&quot;操作系统环境：&quot;&gt;&lt;a href=&quot;#操作系统环境：&quot; class=&quot;headerlink&quot; title=&quot;操作系统环境：&quot;&gt;&lt;/a&gt;操作系统环境：&lt;/h3&gt;&lt;p&gt;CentOS Linux release 7.0.1611(Core) 64位&lt;br&gt;CentOS 7.0默认使用的是firewall作为防火墙，这里改为iptables防火墙步骤。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux相关" scheme="http://yoursite.com/categories/Linux%E7%9B%B8%E5%85%B3/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>windows系统cmd环境导入sql文件报错问题</title>
    <link href="http://yoursite.com/2015/05/23/window%E7%B3%BB%E7%BB%9Fcmd%E7%8E%AF%E5%A2%83%E5%AF%BC%E5%85%A5sql%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2015/05/23/window系统cmd环境导入sql文件报错问题/</id>
    <published>2015-05-23T14:33:25.000Z</published>
    <updated>2017-05-23T15:00:03.788Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本篇介绍在windows下的cmd环境执行source *.sql 文件时的报错问题</p>
<h3 id="1-问题现象"><a href="#1-问题现象" class="headerlink" title="1.问题现象"></a>1.问题现象</h3><p><img src="/2015/05/23/window系统cmd环境导入sql文件报错问题/error.jpg" alt="error"></p>
<a id="more"></a>
<h3 id="2-问题原因"><a href="#2-问题原因" class="headerlink" title="2.问题原因"></a>2.问题原因</h3><p>我们用两个图片来说明。在登录mysql客户端后输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; show variables like &quot;character%&quot;</div></pre></td></tr></table></figure></p>
<p>显示如下：<br><img src="/2015/05/23/window系统cmd环境导入sql文件报错问题/windows1.jpg" alt="encode1"><br>当我们输入<code>set names utf8;</code> 之后，执行source *.sql文件不会报错。此时的字符编码情况如下图：<br><img src="/2015/05/23/window系统cmd环境导入sql文件报错问题/windows2.jpg" alt="encode2"><br>观察上下两幅图可知，是client、connection、results这三个系统变量的字符编码导致了乱码报错问题。<br>看看这3个变量的作用：</p>
<p>信息输入路径：client→connection→server；<br>信息输出路径：server→connection→results。</p>
<p>换句话说，每个路径要经过3次改变字符集编码。以出现乱码的输出为例，server里utf8的数据，传入connection转为<code>gbk</code>，传入results转为gbk，utf-8页面又把results转过来。如果两种字符集不兼容，比如<code>gbk</code>和<code>utf8</code>，转化过程就为不可逆的，破坏性的。所以就转不回来了。</p>
<p>但这里要声明一点，“SET NAMES UTF8”作用只是临时的，MySQL重启后就恢复默认了。</p>
<h3 id="3-在ubuntu中的编码与windows中不同，如下图："><a href="#3-在ubuntu中的编码与windows中不同，如下图：" class="headerlink" title="3.在ubuntu中的编码与windows中不同，如下图："></a>3.在ubuntu中的编码与windows中不同，如下图：</h3><p><img src="/2015/05/23/window系统cmd环境导入sql文件报错问题/ubuntu.jpg" alt="ubuntu.encode"><br>因为在这里的client,connection,results 都是utf-8编码，所以在执行source *.sql 文件时不会报错。</p>
<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>在Windows中设置了<code>set names utf8;</code> 之后查询语句会乱码，此时不应设置，中文显示需要<code>gbk</code>编码。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;本篇介绍在windows下的cmd环境执行source *.sql 文件时的报错问题&lt;/p&gt;
&lt;h3 id=&quot;1-问题现象&quot;&gt;&lt;a href=&quot;#1-问题现象&quot; class=&quot;headerlink&quot; title=&quot;1.问题现象&quot;&gt;&lt;/a&gt;1.问题现象&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/2015/05/23/window系统cmd环境导入sql文件报错问题/error.jpg&quot; alt=&quot;error&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>python  开发环境搭建</title>
    <link href="http://yoursite.com/2014/05/07/python%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2014/05/07/python开发环境搭建/</id>
    <published>2014-05-07T09:47:09.000Z</published>
    <updated>2017-05-14T14:21:26.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows下安装Python和配置环境"><a href="#Windows下安装Python和配置环境" class="headerlink" title="Windows下安装Python和配置环境"></a>Windows下安装Python和配置环境</h2><h3 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h3><p>首先要去<a href="https://www.python.org/" target="_blank" rel="external">Python的官网</a><br>下载环境。鼠标移动到Downloads的tab上，在这里可以下载。<br><img src="http://opkyi3su9.bkt.clouddn.com/image/Python-dw.jpg" alt="Python下载页面"><br>Python的环境还是很人性化的，没有那么多啰里啰嗦的配置什么的，下载完之后一路next就可以，直到完成。</p>
<a id="more"></a>
<p>安装时候需要<em>注意</em>的一点是，需要将add [对应版本号] to PATH:<br><img src="http://opkyi3su9.bkt.clouddn.com/images/python3.5.jpg" alt="python3安装"></p>
<h3 id="Python-IDE"><a href="#Python-IDE" class="headerlink" title="Python IDE"></a><strong>Python IDE</strong></h3><p>在这里为大家推荐<a href="http://www.jetbrains.com/pycharm/" target="_blank" rel="external">pycharm</a>,<br>下载和安装都按照提示操作即可。</p>
<h4 id="注册码"><a href="#注册码" class="headerlink" title="注册码"></a><strong>注册码</strong></h4><p>这里推荐一个注册码<a href="http://idea.lanyus.com/" target="_blank" rel="external">pycharm激活码</a>,（感谢作者）。激活过程如下<br>1.进入页面<br><img src="http://opkyi3su9.bkt.clouddn.com/images/pycharm%E6%BF%80%E6%B4%BB%E7%A0%81%E8%8E%B7%E5%8F%96.jpg" alt="激活码获取1"><br>2.获得注册码，复制注册码<br><img src="http://opkyi3su9.bkt.clouddn.com/images/pycharm%E6%BF%80%E6%B4%BB%E7%A0%81%E8%8E%B7%E5%8F%96%20%282%29.jpg" alt="激活码获取2"><br>3.进入pycharm，找到help下的Register：<br><img src="http://opkyi3su9.bkt.clouddn.com/images/pycharm%E6%BF%80%E6%B4%BB%E6%8C%89%E9%92%AE.jpg" alt="激活1"></p>
<p>4.选择active-code,粘贴注册码,点击OK完成。恭喜你，可以敲代码了！！<br><img src="http://opkyi3su9.bkt.clouddn.com/images/pycharm%E6%BF%80%E6%B4%BB%E7%A0%81%E7%B2%98%E8%B4%B4.jpg" alt="此处输入图片的描述"></p>
<h3 id="第一个Python程序"><a href="#第一个Python程序" class="headerlink" title="第一个Python程序"></a>第一个Python程序</h3><p>打开pycharm,新建工程:New Project<br><img src="http://opkyi3su9.bkt.clouddn.com/images/pycharm-nenproject.jpg" alt="新建工程1"><br>选择路径和解释器:<br><img src="http://opkyi3su9.bkt.clouddn.com/images/pycharm-newproject-2.jpg" alt="新建工程2"><br>现在，让我们来写一个最简单的Python程序，新建文件，点击New,选择Python file:<br><img src="http://opkyi3su9.bkt.clouddn.com/images/newfile1.jpg" alt="新建文件1"></p>
<p>为文件命名:</p>
<p><img src="http://opkyi3su9.bkt.clouddn.com/images/newfile2.jpg" alt="新建文件2"></p>
<p>下面是代码块和执行情况，在<strong>python2</strong>：中<br><img src="http://opkyi3su9.bkt.clouddn.com/images/py2hello.jpg" alt="py2-hello"></p>
<p>在<strong>python3</strong>中：<br><img src="http://opkyi3su9.bkt.clouddn.com/images/py3.jpg" alt="py3-hello"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Windows下安装Python和配置环境&quot;&gt;&lt;a href=&quot;#Windows下安装Python和配置环境&quot; class=&quot;headerlink&quot; title=&quot;Windows下安装Python和配置环境&quot;&gt;&lt;/a&gt;Windows下安装Python和配置环境&lt;/h2&gt;&lt;h3 id=&quot;安装Python&quot;&gt;&lt;a href=&quot;#安装Python&quot; class=&quot;headerlink&quot; title=&quot;安装Python&quot;&gt;&lt;/a&gt;安装Python&lt;/h3&gt;&lt;p&gt;首先要去&lt;a href=&quot;https://www.python.org/&quot;&gt;Python的官网&lt;/a&gt;&lt;br&gt;下载环境。鼠标移动到Downloads的tab上，在这里可以下载。&lt;br&gt;&lt;img src=&quot;http://opkyi3su9.bkt.clouddn.com/image/Python-dw.jpg&quot; alt=&quot;Python下载页面&quot;&gt;&lt;br&gt;Python的环境还是很人性化的，没有那么多啰里啰嗦的配置什么的，下载完之后一路next就可以，直到完成。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="开发环境" scheme="http://yoursite.com/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
</feed>
